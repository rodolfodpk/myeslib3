/*
 * This file is generated by jOOQ.
*/
package example1.datamodel.tables;


import example1.datamodel.Example1db;
import example1.datamodel.Keys;
import example1.datamodel.tables.records.CustomerSummaryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerSummary extends TableImpl<CustomerSummaryRecord> {

    private static final long serialVersionUID = -1607290717;

    /**
     * The reference instance of <code>example1db.customer_summary</code>
     */
    public static final CustomerSummary CUSTOMER_SUMMARY = new CustomerSummary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerSummaryRecord> getRecordType() {
        return CustomerSummaryRecord.class;
    }

    /**
     * The column <code>example1db.customer_summary.id</code>.
     */
    public final TableField<CustomerSummaryRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>example1db.customer_summary.name</code>.
     */
    public final TableField<CustomerSummaryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>example1db.customer_summary.is_active</code>.
     */
    public final TableField<CustomerSummaryRecord, Boolean> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>example1db.customer_summary</code> table reference
     */
    public CustomerSummary() {
        this("customer_summary", null);
    }

    /**
     * Create an aliased <code>example1db.customer_summary</code> table reference
     */
    public CustomerSummary(String alias) {
        this(alias, CUSTOMER_SUMMARY);
    }

    private CustomerSummary(String alias, Table<CustomerSummaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerSummary(String alias, Table<CustomerSummaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Example1db.EXAMPLE1DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomerSummaryRecord> getPrimaryKey() {
        return Keys.KEY_CUSTOMER_SUMMARY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomerSummaryRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerSummaryRecord>>asList(Keys.KEY_CUSTOMER_SUMMARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerSummary as(String alias) {
        return new CustomerSummary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerSummary rename(String name) {
        return new CustomerSummary(name, null);
    }
}
