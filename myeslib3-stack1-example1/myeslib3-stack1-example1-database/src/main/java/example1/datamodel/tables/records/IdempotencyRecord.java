/*
 * This file is generated by jOOQ.
*/
package example1.datamodel.tables.records;


import example1.datamodel.tables.Idempotency;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdempotencyRecord extends UpdatableRecordImpl<IdempotencyRecord> implements Record3<String, String, Timestamp> {

    private static final long serialVersionUID = -1098518625;

    /**
     * Setter for <code>example1db.idempotency.partition_name</code>.
     */
    public IdempotencyRecord setPartitionName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>example1db.idempotency.partition_name</code>.
     */
    public String getPartitionName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>example1db.idempotency.slot_id</code>.
     */
    public IdempotencyRecord setSlotId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>example1db.idempotency.slot_id</code>.
     */
    public String getSlotId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>example1db.idempotency.inserted_on</code>.
     */
    public IdempotencyRecord setInsertedOn(Timestamp value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>example1db.idempotency.inserted_on</code>.
     */
    public Timestamp getInsertedOn() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Idempotency.IDEMPOTENCY.PARTITION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Idempotency.IDEMPOTENCY.SLOT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Idempotency.IDEMPOTENCY.INSERTED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPartitionName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSlotId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getInsertedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdempotencyRecord value1(String value) {
        setPartitionName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdempotencyRecord value2(String value) {
        setSlotId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdempotencyRecord value3(Timestamp value) {
        setInsertedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdempotencyRecord values(String value1, String value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IdempotencyRecord
     */
    public IdempotencyRecord() {
        super(Idempotency.IDEMPOTENCY);
    }

    /**
     * Create a detached, initialised IdempotencyRecord
     */
    public IdempotencyRecord(String partitionName, String slotId, Timestamp insertedOn) {
        super(Idempotency.IDEMPOTENCY);

        set(0, partitionName);
        set(1, slotId);
        set(2, insertedOn);
    }
}
